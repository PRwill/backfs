block size is defined as 4MB

we want block 2 of /foo/bar

use sfh("/foo/bar/2") to get hash of "889cb07e"

look up 889cb07e in the hash table, it yields bucket 12

go read /var/cache/backfs/bucket/12

slice out bucket 12 from the priority list and move it to the front

/////

buckets start at 0, we keep track of the number of the last bucket created.

when buckets are freed, add them to a free_buckets queue so that when we need more, we reuse those before creating new buckets.

buckets are kept in a priority queue, implemented as a doubly-linked list (?).
When a bucket is accessed, snip it out and move it to the front.
When a bucket is created or an empty one is filled, add it to the front.
When a bucket is freed to release space, it's removed from the end and added to the free_buckets queue.
	Also delete /buckets/%u to clean up the filesystem.

Issues: these queues should be mmap'd files stored in the cache directory so we keep the state for the next mount.

If a write to cache is needed, and the cache is full, free buckets at the end of the list until the space is available.

struct bucket {
	uint32_t number;
	uint16_t size;
	struct bucket *prev, *next;
};
